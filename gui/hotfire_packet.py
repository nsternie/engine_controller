import time
import struct

class ECParse:

	def __init__(self):
		self.csv_header = "Time (s),valve_states (),pressure[0] (counts),pressure[1] (counts),pressure[2] (counts),pressure[3] (counts),pressure[4] (counts),pressure[5] (counts),pressure[6] (counts),pressure[7] (counts),pressure[8] (counts),pressure[9] (counts),pressure[10] (counts),pressure[11] (counts),pressure[12] (counts),pressure[13] (counts),pressure[14] (counts),pressure[15] (counts),pressure[16] (counts),pressure[17] (counts),pressure[18] (counts),pressure[19] (counts),pressure[20] (counts),pressure[21] (count),samplerate (Hz),main_cycle_time (microseconds),motor_cycle_time (microseconds),adc_cycle_time (microseconds),telemetry_cycle_time (microseconds),ebatt (Volts),ibus (Amps),telemetry_rate (Hz),STATE (),ivlv[0] (Amps),ivlv[1] (Amps),ivlv[2] (Amps),ivlv[3] (Amps),ivlv[4] (Amps),ivlv[5] (Amps),ivlv[6] (Amps),ivlv[7] (Amps),ivlv[8] (Amps),ivlv[9] (Amps),ivlv[10] (Amps),ivlv[11] (Amps),ivlv[12] (Amps),ivlv[13] (Amps),ivlv[14] (Amps),ivlv[15] (Amps),ivlv[16] (Amps),ivlv[17] (Amps),ivlv[18] (Amps),ivlv[19] (Amps),ivlv[20] (Amps),ivlv[21] (Amps),ivlv[22] (Amps),ivlv[23] (Amps),ivlv[24] (Amps),ivlv[25] (Amps),ivlv[26] (Amps),ivlv[27] (Amps),ivlv[28] (Amps),ivlv[29] (Amps),ivlv[30] (Amps),ivlv[31] (Amps),evlv[0] (Volts),evlv[1] (Volts),evlv[2] (Volts),evlv[3] (Volts),evlv[4] (Volts),evlv[5] (Volts),evlv[6] (Volts),evlv[7] (Volts),evlv[8] (Volts),evlv[9] (Volts),evlv[10] (Volts),evlv[11] (Volts),evlv[12] (Volts),evlv[13] (Volts),evlv[14] (Volts),evlv[15] (Volts),evlv[16] (Volts),evlv[17] (Volts),evlv[18] (Volts),evlv[19] (Volts),evlv[20] (Volts),evlv[21] (Volts),evlv[22] (Volts),evlv[23] (Volts),evlv[24] (Volts),evlv[25] (Volts),evlv[26] (Volts),evlv[27] (Volts),evlv[28] (Volts),evlv[29] (Volts),evlv[30] (Volts),evlv[31] (Volts),e3v (Volts),e5v (Volts),e28v (Volts),i5v (amps),i3v (amps),BOARD_ID (),last_packet_number (),last_command_id (),tbrd (),tvlv (),tmtr (),error_code (),LOGGING_ACTIVE (),current_page (),zero (),zero (),zero (),zero (),zero (),zero (),zero (),zero (),zero (),zero (),zero (),zero (),\n"
		self.valve_states = 0
		self.pressure = [0]*22
		self.samplerate = 0
		self.motor_setpoint = [0]*4
		self.main_cycle_time = 0
		self.motor_cycle_time = 0
		self.adc_cycle_time = 0
		self.telemetry_cycle_time = 0
		self.ebatt = 0
		self.ibus = 0
		self.telemetry_rate = 0
		self.motor_control_gain = [0]*4
		self.motor_position = [0]*4
		self.motor_pwm = [0]*4
		self.count1 = 0
		self.count2 = 0
		self.count3 = 0
		self.STATE = 0
		self.load = [0]*4
		self.thrust_load = 0
		self.thermocouple = [0]*4
		self.ivlv = [0]*32
		self.evlv = [0]*32
		self.LOG_TO_AUTO = 0
		self.auto_states = 0
		self.debug = [0]*8
		self.e5v = 0
		self.e3v = 0
		self.BOARD_ID = 0
		self.last_packet_number = -1
		self.last_command_id = -1
		self.imtr = [0]*2
		self.tbrd = 0
		self.tvlv = 0
		self.tmtr = 0
		self.error_code = 0
		self.LOGGING_ACTIVE = 0
		self.current_page = -1
		self.zero = 0
		self.e28v = 0
		self.i3v = 0
		self.i5v = 0
		self.log_string = ""
		self.num_items = 123
		
		self.dict = {}
		
		self.items = [''] * self.num_items
		self.items[0] = 'valve_states' 
		self.items[1] = 'pressure[0]' 
		self.items[2] = 'pressure[1]' 
		self.items[3] = 'pressure[2]' 
		self.items[4] = 'pressure[3]' 
		self.items[5] = 'pressure[4]' 
		self.items[6] = 'pressure[5]' 
		self.items[7] = 'pressure[6]' 
		self.items[8] = 'pressure[7]' 
		self.items[9] = 'pressure[8]' 
		self.items[10] = 'pressure[9]' 
		self.items[11] = 'pressure[10]' 
		self.items[12] = 'pressure[11]' 
		self.items[13] = 'pressure[12]' 
		self.items[14] = 'pressure[13]' 
		self.items[15] = 'pressure[14]' 
		self.items[16] = 'pressure[15]' 
		self.items[17] = 'pressure[16]' 
		self.items[18] = 'pressure[17]' 
		self.items[19] = 'pressure[18]' 
		self.items[20] = 'pressure[19]' 
		self.items[21] = 'pressure[20]' 
		self.items[22] = 'pressure[21]' 
		self.items[23] = 'samplerate' 
		self.items[24] = 'main_cycle_time' 
		self.items[25] = 'motor_cycle_time' 
		self.items[26] = 'adc_cycle_time' 
		self.items[27] = 'telemetry_cycle_time' 
		self.items[28] = 'ebatt' 
		self.items[29] = 'ibus' 
		self.items[30] = 'telemetry_rate' 
		self.items[31] = 'STATE' 
		self.items[32] = 'ivlv[0]' 
		self.items[33] = 'ivlv[1]' 
		self.items[34] = 'ivlv[2]' 
		self.items[35] = 'ivlv[3]' 
		self.items[36] = 'ivlv[4]' 
		self.items[37] = 'ivlv[5]' 
		self.items[38] = 'ivlv[6]' 
		self.items[39] = 'ivlv[7]' 
		self.items[40] = 'ivlv[8]' 
		self.items[41] = 'ivlv[9]' 
		self.items[42] = 'ivlv[10]' 
		self.items[43] = 'ivlv[11]' 
		self.items[44] = 'ivlv[12]' 
		self.items[45] = 'ivlv[13]' 
		self.items[46] = 'ivlv[14]' 
		self.items[47] = 'ivlv[15]' 
		self.items[48] = 'ivlv[16]' 
		self.items[49] = 'ivlv[17]' 
		self.items[50] = 'ivlv[18]' 
		self.items[51] = 'ivlv[19]' 
		self.items[52] = 'ivlv[20]' 
		self.items[53] = 'ivlv[21]' 
		self.items[54] = 'ivlv[22]' 
		self.items[55] = 'ivlv[23]' 
		self.items[56] = 'ivlv[24]' 
		self.items[57] = 'ivlv[25]' 
		self.items[58] = 'ivlv[26]' 
		self.items[59] = 'ivlv[27]' 
		self.items[60] = 'ivlv[28]' 
		self.items[61] = 'ivlv[29]' 
		self.items[62] = 'ivlv[30]' 
		self.items[63] = 'ivlv[31]' 
		self.items[64] = 'evlv[0]' 
		self.items[65] = 'evlv[1]' 
		self.items[66] = 'evlv[2]' 
		self.items[67] = 'evlv[3]' 
		self.items[68] = 'evlv[4]' 
		self.items[69] = 'evlv[5]' 
		self.items[70] = 'evlv[6]' 
		self.items[71] = 'evlv[7]' 
		self.items[72] = 'evlv[8]' 
		self.items[73] = 'evlv[9]' 
		self.items[74] = 'evlv[10]' 
		self.items[75] = 'evlv[11]' 
		self.items[76] = 'evlv[12]' 
		self.items[77] = 'evlv[13]' 
		self.items[78] = 'evlv[14]' 
		self.items[79] = 'evlv[15]' 
		self.items[80] = 'evlv[16]' 
		self.items[81] = 'evlv[17]' 
		self.items[82] = 'evlv[18]' 
		self.items[83] = 'evlv[19]' 
		self.items[84] = 'evlv[20]' 
		self.items[85] = 'evlv[21]' 
		self.items[86] = 'evlv[22]' 
		self.items[87] = 'evlv[23]' 
		self.items[88] = 'evlv[24]' 
		self.items[89] = 'evlv[25]' 
		self.items[90] = 'evlv[26]' 
		self.items[91] = 'evlv[27]' 
		self.items[92] = 'evlv[28]' 
		self.items[93] = 'evlv[29]' 
		self.items[94] = 'evlv[30]' 
		self.items[95] = 'evlv[31]' 
		self.items[96] = 'e3v' 
		self.items[97] = 'e5v' 
		self.items[98] = 'e28v' 
		self.items[99] = 'i5v' 
		self.items[100] = 'i3v' 
		self.items[101] = 'BOARD_ID' 
		self.items[102] = 'last_packet_number' 
		self.items[103] = 'last_command_id' 
		self.items[104] = 'tbrd' 
		self.items[105] = 'tvlv' 
		self.items[106] = 'tmtr' 
		self.items[107] = 'error_code' 
		self.items[108] = 'LOGGING_ACTIVE' 
		self.items[109] = 'current_page' 
		self.items[110] = 'zero' 
		self.items[111] = 'zero' 
		self.items[112] = 'zero' 
		self.items[113] = 'zero' 
		self.items[114] = 'zero' 
		self.items[115] = 'zero' 
		self.items[116] = 'zero' 
		self.items[117] = 'zero' 
		self.items[118] = 'zero' 
		self.items[119] = 'zero' 
		self.items[120] = 'zero' 
		self.items[121] = 'zero' 

	def parse_packet(self, packet):
		byte_rep = packet[0:4]
		self.valve_states = int((float(struct.unpack("<I", byte_rep)[0]))/1)
		self.dict[self.items[0]] = self.valve_states
		byte_rep = packet[4:6]
		self.pressure[0] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[1]] = self.pressure[0]
		byte_rep = packet[6:8]
		self.pressure[1] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[2]] = self.pressure[1]
		byte_rep = packet[8:10]
		self.pressure[2] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[3]] = self.pressure[2]
		byte_rep = packet[10:12]
		self.pressure[3] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[4]] = self.pressure[3]
		byte_rep = packet[12:14]
		self.pressure[4] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[5]] = self.pressure[4]
		byte_rep = packet[14:16]
		self.pressure[5] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[6]] = self.pressure[5]
		byte_rep = packet[16:18]
		self.pressure[6] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[7]] = self.pressure[6]
		byte_rep = packet[18:20]
		self.pressure[7] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[8]] = self.pressure[7]
		byte_rep = packet[20:22]
		self.pressure[8] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[9]] = self.pressure[8]
		byte_rep = packet[22:24]
		self.pressure[9] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[10]] = self.pressure[9]
		byte_rep = packet[24:26]
		self.pressure[10] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[11]] = self.pressure[10]
		byte_rep = packet[26:28]
		self.pressure[11] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[12]] = self.pressure[11]
		byte_rep = packet[28:30]
		self.pressure[12] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[13]] = self.pressure[12]
		byte_rep = packet[30:32]
		self.pressure[13] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[14]] = self.pressure[13]
		byte_rep = packet[32:34]
		self.pressure[14] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[15]] = self.pressure[14]
		byte_rep = packet[34:36]
		self.pressure[15] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[16]] = self.pressure[15]
		byte_rep = packet[36:38]
		self.pressure[16] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[17]] = self.pressure[16]
		byte_rep = packet[38:40]
		self.pressure[17] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[18]] = self.pressure[17]
		byte_rep = packet[40:42]
		self.pressure[18] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[19]] = self.pressure[18]
		byte_rep = packet[42:44]
		self.pressure[19] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[20]] = self.pressure[19]
		byte_rep = packet[44:46]
		self.pressure[20] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[21]] = self.pressure[20]
		byte_rep = packet[46:48]
		self.pressure[21] = float((float(struct.unpack("<h", byte_rep)[0]))/1)
		self.dict[self.items[22]] = self.pressure[21]
		byte_rep = packet[48:52]
		self.samplerate = float((float(struct.unpack("<I", byte_rep)[0]))/1)
		self.dict[self.items[23]] = self.samplerate
		byte_rep = packet[52:54]
		self.main_cycle_time = int((float(struct.unpack("<H", byte_rep)[0]))/1)
		self.dict[self.items[24]] = self.main_cycle_time
		byte_rep = packet[54:56]
		self.motor_cycle_time = int((float(struct.unpack("<H", byte_rep)[0]))/1)
		self.dict[self.items[25]] = self.motor_cycle_time
		byte_rep = packet[56:58]
		self.adc_cycle_time = int((float(struct.unpack("<H", byte_rep)[0]))/1)
		self.dict[self.items[26]] = self.adc_cycle_time
		byte_rep = packet[58:62]
		self.telemetry_cycle_time = float((float(struct.unpack("<I", byte_rep)[0]))/1)
		self.dict[self.items[27]] = self.telemetry_cycle_time
		byte_rep = packet[62:64]
		self.ebatt = float((float(struct.unpack("<h", byte_rep)[0]))/1000)
		self.dict[self.items[28]] = self.ebatt
		byte_rep = packet[64:66]
		self.ibus = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[29]] = self.ibus
		byte_rep = packet[66:68]
		self.telemetry_rate = float((float(struct.unpack("<H", byte_rep)[0]))/1)
		self.dict[self.items[30]] = self.telemetry_rate
		byte_rep = packet[68:69]
		self.STATE = float((float(struct.unpack("<B", byte_rep)[0]))/1)
		self.dict[self.items[31]] = self.STATE
		byte_rep = packet[69:71]
		self.ivlv[0] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[32]] = self.ivlv[0]
		byte_rep = packet[71:73]
		self.ivlv[1] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[33]] = self.ivlv[1]
		byte_rep = packet[73:75]
		self.ivlv[2] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[34]] = self.ivlv[2]
		byte_rep = packet[75:77]
		self.ivlv[3] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[35]] = self.ivlv[3]
		byte_rep = packet[77:79]
		self.ivlv[4] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[36]] = self.ivlv[4]
		byte_rep = packet[79:81]
		self.ivlv[5] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[37]] = self.ivlv[5]
		byte_rep = packet[81:83]
		self.ivlv[6] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[38]] = self.ivlv[6]
		byte_rep = packet[83:85]
		self.ivlv[7] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[39]] = self.ivlv[7]
		byte_rep = packet[85:87]
		self.ivlv[8] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[40]] = self.ivlv[8]
		byte_rep = packet[87:89]
		self.ivlv[9] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[41]] = self.ivlv[9]
		byte_rep = packet[89:91]
		self.ivlv[10] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[42]] = self.ivlv[10]
		byte_rep = packet[91:93]
		self.ivlv[11] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[43]] = self.ivlv[11]
		byte_rep = packet[93:95]
		self.ivlv[12] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[44]] = self.ivlv[12]
		byte_rep = packet[95:97]
		self.ivlv[13] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[45]] = self.ivlv[13]
		byte_rep = packet[97:99]
		self.ivlv[14] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[46]] = self.ivlv[14]
		byte_rep = packet[99:101]
		self.ivlv[15] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[47]] = self.ivlv[15]
		byte_rep = packet[101:103]
		self.ivlv[16] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[48]] = self.ivlv[16]
		byte_rep = packet[103:105]
		self.ivlv[17] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[49]] = self.ivlv[17]
		byte_rep = packet[105:107]
		self.ivlv[18] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[50]] = self.ivlv[18]
		byte_rep = packet[107:109]
		self.ivlv[19] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[51]] = self.ivlv[19]
		byte_rep = packet[109:111]
		self.ivlv[20] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[52]] = self.ivlv[20]
		byte_rep = packet[111:113]
		self.ivlv[21] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[53]] = self.ivlv[21]
		byte_rep = packet[113:115]
		self.ivlv[22] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[54]] = self.ivlv[22]
		byte_rep = packet[115:117]
		self.ivlv[23] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[55]] = self.ivlv[23]
		byte_rep = packet[117:119]
		self.ivlv[24] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[56]] = self.ivlv[24]
		byte_rep = packet[119:121]
		self.ivlv[25] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[57]] = self.ivlv[25]
		byte_rep = packet[121:123]
		self.ivlv[26] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[58]] = self.ivlv[26]
		byte_rep = packet[123:125]
		self.ivlv[27] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[59]] = self.ivlv[27]
		byte_rep = packet[125:127]
		self.ivlv[28] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[60]] = self.ivlv[28]
		byte_rep = packet[127:129]
		self.ivlv[29] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[61]] = self.ivlv[29]
		byte_rep = packet[129:131]
		self.ivlv[30] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[62]] = self.ivlv[30]
		byte_rep = packet[131:133]
		self.ivlv[31] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[63]] = self.ivlv[31]
		byte_rep = packet[133:135]
		self.evlv[0] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[64]] = self.evlv[0]
		byte_rep = packet[135:137]
		self.evlv[1] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[65]] = self.evlv[1]
		byte_rep = packet[137:139]
		self.evlv[2] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[66]] = self.evlv[2]
		byte_rep = packet[139:141]
		self.evlv[3] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[67]] = self.evlv[3]
		byte_rep = packet[141:143]
		self.evlv[4] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[68]] = self.evlv[4]
		byte_rep = packet[143:145]
		self.evlv[5] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[69]] = self.evlv[5]
		byte_rep = packet[145:147]
		self.evlv[6] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[70]] = self.evlv[6]
		byte_rep = packet[147:149]
		self.evlv[7] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[71]] = self.evlv[7]
		byte_rep = packet[149:151]
		self.evlv[8] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[72]] = self.evlv[8]
		byte_rep = packet[151:153]
		self.evlv[9] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[73]] = self.evlv[9]
		byte_rep = packet[153:155]
		self.evlv[10] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[74]] = self.evlv[10]
		byte_rep = packet[155:157]
		self.evlv[11] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[75]] = self.evlv[11]
		byte_rep = packet[157:159]
		self.evlv[12] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[76]] = self.evlv[12]
		byte_rep = packet[159:161]
		self.evlv[13] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[77]] = self.evlv[13]
		byte_rep = packet[161:163]
		self.evlv[14] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[78]] = self.evlv[14]
		byte_rep = packet[163:165]
		self.evlv[15] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[79]] = self.evlv[15]
		byte_rep = packet[165:167]
		self.evlv[16] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[80]] = self.evlv[16]
		byte_rep = packet[167:169]
		self.evlv[17] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[81]] = self.evlv[17]
		byte_rep = packet[169:171]
		self.evlv[18] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[82]] = self.evlv[18]
		byte_rep = packet[171:173]
		self.evlv[19] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[83]] = self.evlv[19]
		byte_rep = packet[173:175]
		self.evlv[20] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[84]] = self.evlv[20]
		byte_rep = packet[175:177]
		self.evlv[21] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[85]] = self.evlv[21]
		byte_rep = packet[177:179]
		self.evlv[22] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[86]] = self.evlv[22]
		byte_rep = packet[179:181]
		self.evlv[23] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[87]] = self.evlv[23]
		byte_rep = packet[181:183]
		self.evlv[24] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[88]] = self.evlv[24]
		byte_rep = packet[183:185]
		self.evlv[25] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[89]] = self.evlv[25]
		byte_rep = packet[185:187]
		self.evlv[26] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[90]] = self.evlv[26]
		byte_rep = packet[187:189]
		self.evlv[27] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[91]] = self.evlv[27]
		byte_rep = packet[189:191]
		self.evlv[28] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[92]] = self.evlv[28]
		byte_rep = packet[191:193]
		self.evlv[29] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[93]] = self.evlv[29]
		byte_rep = packet[193:195]
		self.evlv[30] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[94]] = self.evlv[30]
		byte_rep = packet[195:197]
		self.evlv[31] = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[95]] = self.evlv[31]
		byte_rep = packet[197:201]
		self.e3v = float((float(struct.unpack("<i", byte_rep)[0]))/100)
		self.dict[self.items[96]] = self.e3v
		byte_rep = packet[201:205]
		self.e5v = float((float(struct.unpack("<i", byte_rep)[0]))/100)
		self.dict[self.items[97]] = self.e5v
		byte_rep = packet[205:207]
		self.e28v = float((float(struct.unpack("<h", byte_rep)[0]))/100)
		self.dict[self.items[98]] = self.e28v
		byte_rep = packet[207:208]
		self.i5v = float((float(struct.unpack("<B", byte_rep)[0]))/100)
		self.dict[self.items[99]] = self.i5v
		byte_rep = packet[208:209]
		self.i3v = float((float(struct.unpack("<B", byte_rep)[0]))/100)
		self.dict[self.items[100]] = self.i3v
		byte_rep = packet[209:211]
		self.BOARD_ID = float((float(struct.unpack("<H", byte_rep)[0]))/1)
		self.dict[self.items[101]] = self.BOARD_ID
		byte_rep = packet[211:213]
		self.last_packet_number = float((float(struct.unpack("<H", byte_rep)[0]))/1)
		self.dict[self.items[102]] = self.last_packet_number
		byte_rep = packet[213:215]
		self.last_command_id = float((float(struct.unpack("<H", byte_rep)[0]))/1)
		self.dict[self.items[103]] = self.last_command_id
		byte_rep = packet[215:217]
		self.tbrd = float((float(struct.unpack("<H", byte_rep)[0]))/10)
		self.dict[self.items[104]] = self.tbrd
		byte_rep = packet[217:219]
		self.tvlv = float((float(struct.unpack("<H", byte_rep)[0]))/10)
		self.dict[self.items[105]] = self.tvlv
		byte_rep = packet[219:221]
		self.tmtr = float((float(struct.unpack("<H", byte_rep)[0]))/10)
		self.dict[self.items[106]] = self.tmtr
		byte_rep = packet[221:222]
		self.error_code = float((float(struct.unpack("<B", byte_rep)[0]))/1)
		self.dict[self.items[107]] = self.error_code
		byte_rep = packet[222:223]
		self.LOGGING_ACTIVE = float((float(struct.unpack("<B", byte_rep)[0]))/1)
		self.dict[self.items[108]] = self.LOGGING_ACTIVE
		byte_rep = packet[223:225]
		self.current_page = float((float(struct.unpack("<H", byte_rep)[0]))/1)
		self.dict[self.items[109]] = self.current_page
		byte_rep = packet[225:226]
		self.zero = float((float(struct.unpack("<B", byte_rep)[0]))/1)
		self.dict[self.items[110]] = self.zero
		byte_rep = packet[226:227]
		self.zero = float((float(struct.unpack("<B", byte_rep)[0]))/1)
		self.dict[self.items[111]] = self.zero
		byte_rep = packet[227:228]
		self.zero = float((float(struct.unpack("<B", byte_rep)[0]))/1)
		self.dict[self.items[112]] = self.zero
		byte_rep = packet[228:229]
		self.zero = float((float(struct.unpack("<B", byte_rep)[0]))/1)
		self.dict[self.items[113]] = self.zero
		byte_rep = packet[229:230]
		self.zero = float((float(struct.unpack("<B", byte_rep)[0]))/1)
		self.dict[self.items[114]] = self.zero
		byte_rep = packet[230:231]
		self.zero = float((float(struct.unpack("<B", byte_rep)[0]))/1)
		self.dict[self.items[115]] = self.zero
		byte_rep = packet[231:232]
		self.zero = float((float(struct.unpack("<B", byte_rep)[0]))/1)
		self.dict[self.items[116]] = self.zero
		byte_rep = packet[232:233]
		self.zero = float((float(struct.unpack("<B", byte_rep)[0]))/1)
		self.dict[self.items[117]] = self.zero
		byte_rep = packet[233:234]
		self.zero = float((float(struct.unpack("<B", byte_rep)[0]))/1)
		self.dict[self.items[118]] = self.zero
		byte_rep = packet[234:235]
		self.zero = float((float(struct.unpack("<B", byte_rep)[0]))/1)
		self.dict[self.items[119]] = self.zero
		byte_rep = packet[235:236]
		self.zero = float((float(struct.unpack("<B", byte_rep)[0]))/1)
		self.dict[self.items[120]] = self.zero
		byte_rep = packet[236:237]
		self.zero = float((float(struct.unpack("<B", byte_rep)[0]))/1)
		self.dict[self.items[121]] = self.zero
		self.log_string = str(time.clock())+','+str(self.valve_states)+','+str(self.pressure[0])+','+str(self.pressure[1])+','+str(self.pressure[2])+','+str(self.pressure[3])+','+str(self.pressure[4])+','+str(self.pressure[5])+','+str(self.pressure[6])+','+str(self.pressure[7])+','+str(self.pressure[8])+','+str(self.pressure[9])+','+str(self.pressure[10])+','+str(self.pressure[11])+','+str(self.pressure[12])+','+str(self.pressure[13])+','+str(self.pressure[14])+','+str(self.pressure[15])+','+str(self.pressure[16])+','+str(self.pressure[17])+','+str(self.pressure[18])+','+str(self.pressure[19])+','+str(self.pressure[20])+','+str(self.pressure[21])+','+str(self.samplerate)+','+str(self.main_cycle_time)+','+str(self.motor_cycle_time)+','+str(self.adc_cycle_time)+','+str(self.telemetry_cycle_time)+','+str(self.ebatt)+','+str(self.ibus)+','+str(self.telemetry_rate)+','+str(self.STATE)+','+str(self.ivlv[0])+','+str(self.ivlv[1])+','+str(self.ivlv[2])+','+str(self.ivlv[3])+','+str(self.ivlv[4])+','+str(self.ivlv[5])+','+str(self.ivlv[6])+','+str(self.ivlv[7])+','+str(self.ivlv[8])+','+str(self.ivlv[9])+','+str(self.ivlv[10])+','+str(self.ivlv[11])+','+str(self.ivlv[12])+','+str(self.ivlv[13])+','+str(self.ivlv[14])+','+str(self.ivlv[15])+','+str(self.ivlv[16])+','+str(self.ivlv[17])+','+str(self.ivlv[18])+','+str(self.ivlv[19])+','+str(self.ivlv[20])+','+str(self.ivlv[21])+','+str(self.ivlv[22])+','+str(self.ivlv[23])+','+str(self.ivlv[24])+','+str(self.ivlv[25])+','+str(self.ivlv[26])+','+str(self.ivlv[27])+','+str(self.ivlv[28])+','+str(self.ivlv[29])+','+str(self.ivlv[30])+','+str(self.ivlv[31])+','+str(self.evlv[0])+','+str(self.evlv[1])+','+str(self.evlv[2])+','+str(self.evlv[3])+','+str(self.evlv[4])+','+str(self.evlv[5])+','+str(self.evlv[6])+','+str(self.evlv[7])+','+str(self.evlv[8])+','+str(self.evlv[9])+','+str(self.evlv[10])+','+str(self.evlv[11])+','+str(self.evlv[12])+','+str(self.evlv[13])+','+str(self.evlv[14])+','+str(self.evlv[15])+','+str(self.evlv[16])+','+str(self.evlv[17])+','+str(self.evlv[18])+','+str(self.evlv[19])+','+str(self.evlv[20])+','+str(self.evlv[21])+','+str(self.evlv[22])+','+str(self.evlv[23])+','+str(self.evlv[24])+','+str(self.evlv[25])+','+str(self.evlv[26])+','+str(self.evlv[27])+','+str(self.evlv[28])+','+str(self.evlv[29])+','+str(self.evlv[30])+','+str(self.evlv[31])+','+str(self.e3v)+','+str(self.e5v)+','+str(self.e28v)+','+str(self.i5v)+','+str(self.i3v)+','+str(self.BOARD_ID)+','+str(self.last_packet_number)+','+str(self.last_command_id)+','+str(self.tbrd)+','+str(self.tvlv)+','+str(self.tmtr)+','+str(self.error_code)+','+str(self.LOGGING_ACTIVE)+','+str(self.current_page)+','+str(self.zero)+','+str(self.zero)+','+str(self.zero)+','+str(self.zero)+','+str(self.zero)+','+str(self.zero)+','+str(self.zero)+','+str(self.zero)+','+str(self.zero)+','+str(self.zero)+','+str(self.zero)+','+str(self.zero)+','